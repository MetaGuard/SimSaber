TO LEARN:

1. Order of events
    - Left or right hand collision checked first
    - Order of events between a miss vs a cut
    - Order of events between a cut or an obstacle hit
    - When are notes spawned
    - When are obstacles spawned

2. Hitboxes
    - Note position + rotation
      - ~~quat_slerp [Unity Function]~~
      - ~~look_rotation [Unity Object Method]~~
      - rotated_object_up [Unity Object Method]
      - Transform.up [Unity Function]
      - middle_rotation [Beat Saber Function]
      - ~~_playerTransforms.MoveTowardsHead [Beat Saber Function]~~
      - ~~get_y_pos_from_layer  [Beat Saber Function]~~
      - ~~get_gravity [Beat Saber Function]~~
    - ~~Hitbox sizes for notes~~
    - ~~Bomb hitbox size and shape~~
    - Obstacle hitbox

3. Collision:
    - Why do GameNote objects have a list of smallCuttableBySaber (resp bigCuttableBySaber)
        as opposed to just a single smallCuttableBySaber hitbox?
    - How does Unity check for collision


TO CODE (based on outline in calculateScore.py):

1. Data managers:
    - Energy
    - Combo
    - Active Notes/Bombs
    - Active Obstacles

2. Collision checking:
    - Box with Box
    - Sphere with Box
    - Point with Box

3. Game State:
    - Note position + rotation
    - Obstacle position

4. Score calculation
    - Pre Swing
    - Post Swing
    - Accuracy

Maps to make replays on:
    - "Curse of the lovely fox"     Hard tech map that has a pattern which (i think) you're
    supposed to rotate your body/head a significant amount. 
    - "Teleportal"      Speed/vibro map
    - "Funk assembly"   Lots of bombs
    - "Garakuta doll play"      Lots of note swapping.
    - "Switronic"       Tech that challenges the usual notions of 'parity'
    - Something with lolope notes
    - Something with lots of dot notes
    - Fitbeat song?